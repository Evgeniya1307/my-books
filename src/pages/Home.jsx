import React from "react";
import { useDispatch, useSelector } from "react-redux";

import qs from "qs";

import {
  selectFilter,
  setCategoryId,
  setCurrentPage,
  setFilters,
} from "../redux/slices/filterSlice";
import Categories from "../components/Categories";
import Sort, { sortList } from "../components/Sort";
import BooksBlock from "../components/BooksBlock";
import Skeleton from "../components/BooksBlock/Skeleton";
import Pagination from "../Pagination";
import { SearchContext } from "../App";
import { useNavigate } from "react-router-dom";
import { fetchBooks, selectorBooksData } from "../redux/slices/booksSlice";

const Home = () => {
  const navigate = useNavigate();
  const dispatch = useDispatch(); //–≤–µ—Ä–Ω—ë—Ç –≤ dispatch —Ñ—É–Ω–∫—Ü–∏—é –∫–æ—Ç–æ—Ä–∞—è –º–µ–Ω—è–µ—Ç —Å—Ç–µ–π—Ç
  const isMounted = React.useRef(false);

  const { items, status } = useSelector(selectorBooksData);//–≤—ã—Ç–∞—Å–∫–∏–≤–∞—é –¥–∞–Ω–Ω—ã–µ
  const { categoryId, sort, currentPage, searchValue } = useSelector(selectFilter); //–≤—ã—Ç–∞—Å–∫–∏–≤–∞—é –≤—Å—ë —Ö—Ä–∞–Ω–∏–ª–∏—â–µ –∏ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –∏ —Å–æ—Ä—Ç

  const onChangeCategory = (id) => {
    dispatch(setCategoryId(id)); //–ø–µ—Ä–µ–¥–∞–ª–∞ –≤ –¥–∏—Å–ø–∞—Ç—á  –º–µ–Ω—è–µ—Ç –∫–∞—Ç–µ–≥–æ—Ä–∏—é
  };
  const onChangePage = (number) => {
    dispatch(setCurrentPage(number));
  };
  const getBooks = async () => {
    const sortBy = sort.sortProperty.replace("-", ""); //–∏–∑ —Å–≤–æ–π—Å—Ç–≤–∞ —É–¥–∞–ª–∏ -
    const order = sort.sortProperty.includes("-") ? "asc" : "desc"; // –ø—Ä–æ–≤–µ—Ä—è–π –µ—Å–ª–∏ –≤ —Å–æ—Ä—Ç–∏—Ä–æ–≤–∫–µ - –µ—Å–ª–∏ includes –µ—Å—Ç—å - —Ç–æ –¥–µ–ª–∞—Ç—å asc –≤–æ–∑—Ä–∞—Å—Ç–∞–Ω–∏—é –∏–Ω–∞—á–µ desc –ø–æ —É–±—ã–≤–∞–Ω–∏—é
    const category = categoryId > 0 ? `category = ${categoryId}` : "";
    const search = searchValue ? `&search=${searchValue}` : ""; //–¥–ª—è –ø–æ–∏—Å–∫–∞ –ø–æ –±—ç–∫–µ–Ω–¥—É
    dispatch(
      fetchBooks({
        sortBy,
        order,
        category,
        search,
        currentPage,
      })
    );
    window.scrollTo(0, 0); //–ü—Ä–æ–∫—Ä—É—Ç–∫–∞ –¥–æ–∫—É–º–µ–Ω—Ç–∞
  };

  // –ï—Å–ª–∏ –∏–∑–º–µ–Ω–∏–ª–∏ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –∏ –±—ã–ª –ø–µ—Ä–≤—ã–π —Ä–µ–Ω–¥–µ—Ä
  React.useEffect(() => {
    if (isMounted.current) {
      // –µ—Å–ª–∏ true(–±—ã–ª –ø–µ—Ä–≤—ã–π —Ä–µ–Ω–¥–µ—Ä) —Ç–æ –¥–µ–ª–∞—Ç—å –Ω–∏–∂–Ω—é—é –∏–Ω—Ñ—É
      const queryString = qs.stringify({
        sortProperty: sort.sortProperty,
        categoryId,
        currentPage,
      });
      navigate(`/?${queryString}`);
    }
    isMounted.current = true;
  }, [categoryId, sort.sortProperty, searchValue, currentPage]);

  // –ï—Å–ª–∏ –±—ã–ª –ø–µ—Ä–≤—ã–π —Ä–µ–Ω–¥–µ—Ä, —Ç–æ –ø—Ä–æ–≤–µ—Ä—è–µ–º URl-–ø–∞—Ä–∞–º–µ—Ç—Ä—ã –∏ —Å–æ—Ö—Ä–∞–Ω—è–µ–º –≤ —Ä–µ–¥—É–∫—Å–µ
  React.useEffect(() => {
    if (window.location.search) {
      //–µ—Å–ª–∏ –µ—Å—Ç—å —Ç–æ –ø–∞—Ä—Å–∏—Ç—å –∏ –ø—Ä–µ–≤—Ä–∞—â–∞—Ç—å –≤ –æ–±—ä–µ–∫—Ç
      const params = qs.parse(window.location.search.substring(1)); //—Å –ø–æ–º–æ—â—å—é qs –ø–∞—Ä—Å–∏–Ω–≥, substring(—É–±–∏—Ä–∞—é ?)
      const sort = sortList.find(
        (obj) => obj.sortProperty === params.sortProperty
      ); //–ø—Ä–æ–±–µ–∂–∞–ª–∞—Å—å –ø–æ –∫–∞–∂–¥,—Å–≤-–≤—É –≤ –æ–±—ä–µ–∫—Ç–µ –∏ –Ω–∞–π—Ç–∏ —á—Ç–æ –µ—Å—Ç—å –≤ –ø–∞—Ä–∞–º—Å sortProperty
      dispatch(
        setFilters({
          ...params,
          sort,
        })
      );
    }
  }, []);

  // –ï—Å–ª–∏ –±—ã–ª –ø–µ—Ä–≤—ã–π —Ä–µ–Ω–¥–µ—Ä, —Ç–æ –∑–∞–ø—Ä–∞—à–∏–≤–∞–µ–º –∫–Ω–∏–≥–∏
  React.useEffect(() => {
    getBooks(); // –µ—Å–ª–∏ –Ω–µ—Ç –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤ —Ç–æ –¥–µ–ª–∞—é –∑–∞–ø—Ä–æ—Å
  }, [categoryId, sort.sortProperty, searchValue, currentPage]); //–µ—Å–ª–∏ –ø–æ–º–µ–Ω—è–µ—Ç—Å—è –∫–∞—Ç–µ–≥–æ—Ä–∏—è –∏–ª–∏ —Å–æ—Ä—Ç–∏—Ä–æ–≤–∫–∞ –¥–µ–ª–∞–π –∑–∞–ø—Ä–æ—Å –Ω–∞ –±—ç–∫–µ–Ω–¥ –Ω–∞ –ø–æ–ª—É—á–µ–Ω–∏–µ –Ω–æ–≤—ã—Ö –∫–Ω–∏–≥

  const books = items.map((obj) => <BooksBlock key={obj.id} {...obj} />);
  const skeletons = [...new Array(6)].map((_, index) => (
    <Skeleton key={index} />
  ));

  return (
    <div className="container">
      <div className="content__top">
        <Categories value={categoryId} onChangeCategory={onChangeCategory} />
        {/*–∑–Ω–∞—á–µ–Ω–∏–µ –ø–µ—Ä–µ–¥–∞–ª–∞ –≤ value –∏ —Ñ—É-–∏—è –±—É–¥–µ—Ç –º–µ–Ω—è—Ç—å —Å—Ç–µ–π—Ç –ø—Ä–∏ –Ω–∞–∂–∞—Ç–∏–∏  */}
        {/*–ø—Ä–æ–∫–∏–¥—ã–≤–∞—é –ø—Ä–æ–ø—Å —ç—Ç–æ–≥–æ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞ –≤—ã—Ç–∞—â–∏—Ç—å –¥–∞–Ω–Ω—ã–µ */}
        <Sort />
      </div>
      <h2 className="content__title">–í—Å–µ –∫–Ω–∏–≥–∏</h2>
      {status === "error" ? (
        <div className="content__error-info">
          <h2> –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ üòï</h2>
          <p>–ö —Å–æ–∂–∞–ª–µ–Ω–∏—é, –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –∫–Ω–∏–≥–∏...</p>
        </div>
      ) : (
        <div className="content__items">
          {status === "loading" ? skeletons : books}
        </div>
      )}

      <Pagination currentPage={currentPage} onChangePage={onChangePage} />
      {/*–º–µ—Ç–æ–¥ –≤–æ–∑—Ä–∞—â–∞—é—â–∏–π —á–∏—Å–ª–æ */}
    </div>
  );
};

export default Home;

//const [categoryId, setCategoryId] = React.useState(0); //—ç—Ç–∏ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –ø–µ—Ä–µ–¥–∞–º –Ω–∞ –±—ç–∫–µ–Ω–¥ —Ö—Ä–∞–Ω—è—Ç –≤ —Å–µ–±–µ –∫–∞—Ç–µ–≥–æ—Ä–∏—é –∏ —Ñ—É-–∏—é –∫–æ—Ç–æ—Ä–∞—è –º–µ–Ω—è–µ—Ç —ç—Ç—É –∫–∞—Ç–µ–≥–æ—Ä–∏—é  //2 —Å—Ç–µ–π—Ç–∞ –¥–ª—è –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –∏ —Å–æ—Ä—Ç–∏—Ä–æ–≤–∫–∏
//const [currentPage, setCurrentPage] = React.useState(1);//—Å—Ç–µ–π—Ç –Ω—É–º–µ—Ä–∞—Ü–∏–∏  —Å—Ç—Ä–∞–Ω–∏—Ü
// const [sortType, setSortType] = React.useState({
//sorType —Ö—Ä-—Å—è –æ–±—ä–µ–∫—Ç –≤ –Ω—ë–º —Å–≤-–≤–∞ name,sortProperty –æ–Ω –ø–µ—Ä–µ-—Å—è –≤ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç –≤—ã—Ç-—Å—è –∏–∑ –≤–µ–ª—å—é
// name: "–ø–æ–ø—É–ª—è—Ä–Ω–æ—Å—Ç–∏", //—Å–æ–∑-–ª–∞ –æ–±—ä–µ–∫—Ç –ø—Ä–∏ –ø–µ—Ä–≤–æ–º –æ—Ç–∫—Ä—ã—Ç–∏–∏ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è –≤—ã–±–µ—Ä–µ—Ç—Å—è –ø–æ–ø—É–ª—è—Ä–Ω—ã–µ
// sortProperty: "rating", // –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é —Å–æ—Ä—Ç–∏—Ä–æ–≤–∫–∞ –ø–æ —Ä–µ–π—Ç–∏–Ω–≥—É
//});
//—Å–æ—Å—Ç–æ—è–Ω–∏—è –¥–ª—è –ø–∏—Ü—Ü
// const [items, setItems] = React.useState([]); // –∏–∑–Ω–∞—á–∞–ª—å–Ω–æ –ø—É—Å—Ç–æ–π –º–∞—Å—Å–∏–≤
//–±—É–¥–µ—Ç –ø–æ–Ω—è—Ç–Ω–æ —á—Ç–æ –æ—Ç–æ–±—Ä–∞–∑–∏—Ç—å —Å–∫–µ–ª–µ—Ç–æ–Ω –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –∏–ª–∏ –ø–∏—Ü—Ü—É
//const [isLoading, setIsLoading] = React.useState(true); // –ø—Ä–∏ –ø–µ—Ä–≤–æ–º —Ä–µ–Ω–¥–µ—Ä–µ true

//promise —Å–∏–Ω—Ö—Ä–æ–Ω–Ω—ã–π –ø—Ä–µ–≤—Ä–∞—â–∞–µ—Ç –≤ –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω—ã–π —á—Ç–æ–±—ã –≤ –æ–ø—Ä–µ–¥–µ–ª—ë–Ω–Ω–æ–µ –≤—Ä–µ–º—è –≤—ã–ø–æ–ª–Ω–∏—Ç—å
//–∞ async await –ø—Ä–µ–≤—Ä–∞—â–∞–µ—Ç –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω—ã–π –≤ —Å–∏–Ω—Ö—Ä–æ–Ω–Ω—ã–π
